---
- name: Development stack
  hosts: all
  sudo: yes

  vars:

    user: root
    #user_path: "/home/{{ user }}"
    user_path: "/root"
    dotfiles_path: "{{ user_path }}/dotfiles"
    bashrc: "{{ user_path }}/.bashrc"
    zshrc: "{{ user_path }}/.zshrc"
    with_fonts: true
    cpu_arch: x86_64
    vagrant_version: 1.6.5

    # @todo extract bitbucket to role
    with_bitbucket: false
    bitbucket_user: ''
    bitbucket_password: ''

  #vars_prompt:

  #  bitbucket_user: "bitbucket user (empty for none)"
  #  bitbucket_password: "bitbucket password (empty ffor none)"

  roles:

    - { role: geerlingguy.php-xdebug }

  tasks:

    - name: Ubuntu multiverse repo
      apt_repository: repo="{{item}}" update_cache="no"
      with_items:
        - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
        - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}} multiverse'
        - 'deb http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
        - 'deb-src http://archive.ubuntu.com/ubuntu {{ansible_distribution_release}}-updates multiverse'
      notify: update apt cache

    - name: Tools
      apt: name="{{item}}" update_cache="yes"
      with_items:
        - curl
        - htop
        - git
        - zsh
        - tmux
        - vim
        - exuberant-ctags
        - python
        - python-pip
        - python-dev
        - ruby
        - ruby-dev
        - build-essential
        - ansible
        - virtualbox-guest-utils
        - virtualbox-guest-dkms
        - virtualbox
        - vagrant
        - php5

    - name: Timestamp for backup file naming
      shell: date '+%Y_%m_%d_%H%M'
      register: timestamp
      tags: [ backup ]

    - name: dotfiles folder
      file: path="{{ dotfiles_path }}" state="directory"

    - name: Installing oh-my-zsh (https://github.com/robbyrussell/oh-my-zsh)
      git: >
        repo=https://github.com/robbyrussell/oh-my-zsh
        dest={{ dotfiles_path }}/.oh-my-zsh
      notify:
        - backup zshrc
        - create zshrc

    - name: Check if spf13 is installed
      stat: path="{{ dotfiles_path }}/.spf13-vim-3/"
      register: spf_dir

    - name: Installing spf13-vim, The Ultimate Vim Distribution (http://vim.spf13.com)
      shell: curl http://j.mp/spf13-vim3 -L -o - | sh
      when: spf_dir.stat.isdir is not defined

    - name: default shell
      user: shell=/bin/zsh user={{ user }}
      when: user != "root"

    - name: Solarize term
      git: >
        repo=https://github.com/sigurdga/gnome-terminal-colors-solarized.git
        dest={{ dotfiles_path }}/solarized

    - name: Get fonts
      git: >
        repo=https://github.com/Lokaltog/powerline-fonts.git
        dest={{ dotfiles_path }}/.fonts
      register: fonts_clone
      when: with_fonts

    - name: Install fonts
      shell: fc-cache -vf {{ dotfiles_path }}/.fonts/*/*.ttf
      when: with_fonts and fonts_clone.changed

    - name: oh-my-zsh theme
      lineinfile: dest={{ zshrc }} line='ZSH_THEME=agnoster'

    - name: oh-my-zsh default user
      lineinfile: dest={{ zshrc }} line='DEFAULT_USER={{ user }}'

    - name: Install z
      git: >
        repo=https://github.com/rupa/z.git
        dest={{ dotfiles_path }}/z

    - name: Load z
      lineinfile: dest={{ zshrc }} line='. {{ dotfiles_path }}/z/z.sh'

    - name: shell - profile template
      template: src="templates/.profile" dest="{{ dotfiles_path }}/.profile"

    - name: shell - profile load for bash
      lineinfile: dest={{ bashrc }} line='. {{ dotfiles_path }}/.profile'

    - name: shell - profile load for zsh
      lineinfile: dest={{ zshrc }} line='. {{ dotfiles_path }}/.profile'

    - name: bitbucket cli
      pip: name="bitbucket-cli"
      when: with_bitbucket

    - name: bitbucket credentials template
      template: src="templates/.bitbucket" dest="{{ user_path }}/.bitbucket"
      when: with_bitbucket

    #
    # vagrant manual install
    #

    #- name: download vagrant
    #  get: name="https://dl.bintray.com/mitchellh/vagrant/vagrant_{{ vagrant_version }}_{{ cpu_arch }}.deb -O /tmp/vagrant_{{ vagrant_version }}_{{ cpu_arch }}.deb" dest="/tmp/vagrant_{{ vagrant_version }}_{{ cpu_arch }}.deb"

    #- name: install vagrant
    #  shell: dpkg -i /tmp/vagrant_{{ vagrant_version }}_{{ cpu_arch }}.deb

    #- name: remove vagrant installer
    #  shell: rm -f /tmp/vagrant_{{ vagrant_version }}_{{ cpu_arch }}.deb

    # obsolete plugin, use global-status instead
    #- name: plugin - vagrant list
    #  shell: vagrant plugin install vagrant-list

    #
    # vim
    #

    # http://blog.joncairns.com/2012/05/using-vim-as-a-php-ide/

    - name: custom bashrc
      copy: src=files/.bashrc dest={{ user_path }}/.bashrc

    - name: custom vimrc
      copy: src=files/.vimrc.local dest={{ user_path }}/.vimrc.local

    - name: custom vim bundles
      copy: src=files/.vimrc.bundles.local dest={{ user_path }}/.vimrc.bundles.local
      notify: install vim plugins



  handlers:

    - name: update apt cache
      apt: update_cache="yes"

    - name: backup zshrc
      shell: if [ -f {{ zshrc }} ]; then mv {{ zshrc }} {{ zshrc }}.backup.{{ timestamp }}; fi

    - name: create zshrc
      shell: cp {{ dotfiles_path }}/.oh-my-zsh/templates/zshrc.zsh-template {{ zshrc }}

    - name: install vim plugins
      shell: vim +BundleInstall +qall
